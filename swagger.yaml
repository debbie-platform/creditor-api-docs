openapi: 3.0.1

info:
  title: Debbie Creditor API Docs
  description:
    The Debbie APIs is a RESTful interface, allowing you to programmatically
    update, add and access your data in the platform. It provides predictable URLs
    for accessing resources, and uses built-in HTTP features to receive commands and
    return responses. This makes it easy to communicate with third party systems.
  version: v0.1.0
  x-logo:
    url: https://debbie-platform.github.io/creditor-api-docs/deb-logo.svg

externalDocs:
  description: Find out more about Debbie here
  url: https://debbie.dk

servers:
  - url: https://api.debbiecollect.com

tags:
  - name: Cases
    description: Endpoints for interacting with cases
  - name: Files
    description: Endpoints for interacting with files
  - name: Links
    description: Endpoints for generating links
  - name: "Voucher Type Ids"
    description: |
      ### Principals:
      | Type | id |
      | --- | --- |
      | Invoice (Faktura)          | eb41e58e-fccf-419d-a771-cd5027fe6e87 |
      | Credit note (Kreditnota)       | ef2cdc50-230f-4046-b1af-0f9c498dddd3 |
      | Final statement (Opgørelse)        | 42385ae0-6846-425c-a793-8d47a3b190b5 |
      | On account invoice (Acontofaktura)    | 2d101b6e-74f9-4a4d-9f8e-c7abe2264da0 |
      | Loan (Gældsbrev)        | bf61f462-6d3c-42e8-a99a-852d4a664926 |

      ### Costs:
      | Type | id |
      | --- | --- |
      | Collection cost (Inkassoomkostning)        | 07960de4-303d-4793-92da-3a8cfd5da1a1 |
      | Collection fee (Inkassogebyr)             | 4c3ccbbf-0651-45b2-b37b-4fe736acfd7e |
      | Reminder fee (Rykkergebyr)              | 3e51bf87-3c8f-4dd5-abd5-69417d113c89 |
      | Compensation cost (Kompensationsgebyr)       | ed3e3d61-e1bc-4ee2-9166-adf2c41a2bbf |

      ### Interests:
      | Type | id |
      | --- | --- |
      | DK interest (Procesrente)               | ca4af363-9925-436c-83d6-23b3db6ed5d2 |
      | Fixed interest (Fastrente)                 | 299dc393-1b71-4950-860f-8fb485036722 |
      | Yearly interest (Årlig rente)               | 37db68dd-80be-40c7-8d2d-3619c793107f |

      ### Transactions:
      | Type | id |
      | --- | --- |
      | Deposit (Indbetaling)               | c51f2f6a-8081-45ef-b52d-5e0569fdf12e |

paths:
  /collection-engine/v1/{tenantId}/cases:
    post:
      tags:
        - Cases
      summary: Create new case
      description: Create new case allows the api consumer to create new cases
      operationId: create-case
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the tenant the case is being created for
        - in: query
          name: creditorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the creditor which the case belongs to
      requestBody:
        description: New case object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCase"
            example:
              referenceId: Your id
              isCompany: false
              currency: EUR
              debtors:
                - isCompany: false
                  name: Jane Doe
                  cpr: "1234567890"
                  email: jane@example.com
                  phone: "88888888"
                  lang: "da"
                  address:
                    address: Byvej 2A, 1. tv 0012, Tune
                    coAddress:
                    city: Roskilde
                    zipcode: "4000"
                    country: Danmark
              vouchers:
                - referenceId: Fakt. 123456
                  voucherTypeId: eb41e58e-fccf-419d-a771-cd5027fe6e87
                  amount: -259900
                  imposedByCreditor: true
                  date: "2020-05-01 00:00:00.000+01"
                  dueDate: "2020-05-08 00:00:00.000+01"
                  referenceVouchers:
                    - interestStartDate: "2020-06-01 00:00:00.000+01"
                      amount: 0
                      imposedByCreditor: false
                      voucherTypeId: ca4af363-9925-436c-83d6-23b3db6ed5d2
                      date: "2020-06-01 00:00:00.000+01"
                    - voucherTypeId: 3e51bf87-3c8f-4dd5-abd5-69417d113c89
                      amount: -10000
                      imposedByCreditor: true
                      date: "2020-05-28 00:00:00.000+01"
                    - voucherTypeId: 3e51bf87-3c8f-4dd5-abd5-69417d113c89
                      amount: -10000
                      imposedByCreditor: true
                      date: "2020-06-07 00:00:00.000+01"

        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        401:
          $ref: "#/components/responses/UnauthorizedError"
        422:
          description: Invalid input data
          content: {}
      x-codegen-request-body-name: body

    /collection-engine/v1/{tenantId}/cases/{id}:
    patch:
      tags:
        - Cases
      summary: Update a case
      description: Updates attributes of a case given the cases id
      operationId: update-case
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the tenant the case belongs to
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Id the case to be updated
        - in: query
          name: creditorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the creditor which the case belongs to
      requestBody:
        description: Update case object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCase"
            example:
              status: ENDED
              reason: PAID

        required: true
      responses:
        204:
          description: Successful operation
          content: {}
        401:
          $ref: "#/components/responses/UnauthorizedError"
        422:
          description: Invalid input data
          content: {}
      x-codegen-request-body-name: body

  /collection-engine/v1/{tenantId}/links/{creditorId}/{caseReferenceId}/debtor-web:
    get:
      tags:
        - Links
      summary: Debtor web link
      description: Generate a link to get access to the debtor web
      operationId: links-debtor-web
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the tenant
        - in: path
          name: creditorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the creditor
        - in: path
          name: caseReferenceId
          schema:
            type: string
          required: true
          description: Reference id of the case
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        409:
          $ref: "#/components/responses/ConflictError"
        422:
          description: Invalid input data
          content: {}
      x-codegen-request-body-name: body

  /collection-engine/v1/{tenantId}/links/{creditorId}/{caseReferenceId}/payment-plan:
    get:
      tags:
        - Links
      summary: Payment plan link
      description: Generate a link to get access to the payment plan creation
      operationId: links-payment-plan
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the tenant
        - in: path
          name: creditorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the creditor
        - in: path
          name: caseReferenceId
          schema:
            type: string
          required: true
          description: Reference id of the case
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        409:
          $ref: "#/components/responses/ConflictError"
        422:
          description: Invalid input data
          content: {}
      x-codegen-request-body-name: body

  /collection-engine/v1/{tenantId}/links/{creditorId}/{caseReferenceId}/payment:
    get:
      tags:
        - Links
      summary: Payment link
      description: Generate a link to get access to the payment page from your PSP
      operationId: links-payment
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the tenant
        - in: path
          name: creditorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the creditor
        - in: path
          name: caseReferenceId
          schema:
            type: string
          required: true
          description: Reference id of the case
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        409:
          $ref: "#/components/responses/ConflictError"
        422:
          description: Invalid input data
          content: {}
      x-codegen-request-body-name: body

  /v1/{tenantId}/files:
    post:
      tags:
        - Files
      summary: Upload file
      description: Upload file allows the api consumer to upload files
      operationId: create-file
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the tenant the file is being created for
        - in: query
          name: creditorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the creditor which the case belongs to
      requestBody:
        description: New file object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewFile"
            example:
              content: "Base64 encoded file content"
              contentType: "application/pdf"
              name: "file.pdf"

        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        401:
          $ref: "#/components/responses/UnauthorizedError"
        422:
          description: Invalid input data
          content: {}
      x-codegen-request-body-name: body

  /files/{fileId}/{fileName}:
    get:
      tags:
        - Files
      summary: Get file
      description: Get file by fileId
      operationId: get-file
      parameters:
        - in: path
          name: fileId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the file
        - in: path
          name: fileName
          schema:
            type: string
          required: true
          description: Name of the file. Can be anything and can also be omitted
      responses:
        200:
          description: Successful operation
          content: {}
      x-codegen-request-body-name: body

components:
  schemas:
    NewFile:
      type: object
      properties:
        content:
          type: string
          description: Base64 encoded file content
        contentType:
          type: string
          description: The content type of the file
        name:
          type: string
          description: The name of the file
      required:
        - content
        - contentType

    Address:
      type: object
      properties:
        address:
          type: string
          description: The street name and number of the address
        coAddress:
          type: string
        zipcode:
          type: string
        city:
          type: string
        country:
          type: string
      required:
        - address
        - zipcode
        - city

    NewProperty:
      type: object
      properties:
        handle:
          type: string
        data:
          type: object
          properties:
            text:
              type: string
      required:
        - handle
        - data

    NewVoucherFile:
      type: object
      properties:
        fileName:
          type: string
        contentType:
          type: string
        fileId:
          type: string
          format: uuid
      required:
        - fileName
        - contentType
        - fileId

    NewVoucher:
      type: object
      properties:
        voucherTypeId:
          type: string
          format: uuid
          description: An id for the voucher type. A list of ids can be found in the Voucher Type Ids chapter.
        amount:
          type: integer
          description: Amount in base currency. For example 1€ should be sent as 100.
        referenceId:
          type: string
        interest:
          type: number
          description: Used when the voucher is yearly interest to specify the interest rate. The number is in decimal, for example 0.1 would be an interest rate of 10%.
        date:
          type: string
        interestStartDate:
          type: string
        interestEndDate:
          type: string
        dueDate:
          type: string
        appendix:
          $ref: "#/components/schemas/NewVoucherFile"
          description: The appendix is for pdf copies or similar for a voucher.
        imposedByCreditor:
          type: boolean
          description: Used to signify whether the voucher is imposed by the creditor (as opposed to the collector).
        tags:
          type: array
          items:
            type: string
        referenceVouchers:
          type: array
          items:
            $ref: "#/components/schemas/NewVoucher"
      required:
        - voucherTypeId
        - amount
        - date
        - imposedByCreditor

    UpdateCase:
      type: object
      properties:
        status:
          type: string
          enum: ["VERIFIED", "ENDED"]
          description: The updated status of the case
        reason:
          type: string
          enum: ["PAID", "ERROR_CREDITOR"]
          description: Used to provide a reason when the status is changed to ended
        isCompany:
          type: boolean
          description: Used to indicate whether the entity is a company (true) or private (false)

    NewCase:
      type: object
      properties:
        referenceId:
          type: string
        migratedId:
          type: string
        chainId:
          type: string
          format: uuid
          description: Id of the chain the case is to go through
        currency:
          type: string
          enum: [DKK, SEK, NOK, USD, EUR, GBP, CHF]
          description: Currency
        isCompany:
          type: boolean
          description: Does the case concern a company
        debtors:
          type: array
          items:
            type: object
            properties:
              isCompany:
                type: boolean
              name:
                type: string
              cpr:
                type: string
                description: The cpr number of a debtor, only used when debtor is a person.
              cvr:
                type: string
                description: The cvr number of a debtor, only used when debtor is a company.
              email:
                type: string
              phone:
                type: string
              lang:
                type: string
                description: The language of the debtor
              address:
                $ref: "#/components/schemas/Address"
                description: The debtors address
            required:
              - isCompany
              - name
        vouchers:
          type: array
          items:
            $ref: "#/components/schemas/NewVoucher"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/NewProperty"
      required:
        - referenceId
        - isCompany
        - debtors
        - vouchers

    LinkResponse:
      type: object
      properties:
        url:
          type: string
          description: Link to the site

  responses:
    UnauthorizedError:
      description: Access token missing or invalid
    ConflictError:
      description: Conflict

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description:
        "Authentication with an API key kan be done by using a bearer token
        in the Authorization header. This is done using the following format 'Authorization:
        Bearer {token}'. The API token can both be issued and revoked directly from the platform. Please go to Settings → Developers → API. Name the API token and associate your needed scopes."

security:
  - bearerAuth: []
